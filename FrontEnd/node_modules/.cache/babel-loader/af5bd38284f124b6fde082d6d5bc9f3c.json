{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\junio\\\\Documents\\\\GitHub\\\\TA-Assignment-Software\\\\FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\junio\\\\Documents\\\\GitHub\\\\TA-Assignment-Software\\\\FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\junio\\\\Documents\\\\GitHub\\\\TA-Assignment-Software\\\\FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\junio\\\\Documents\\\\GitHub\\\\TA-Assignment-Software\\\\FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\junio\\\\Documents\\\\GitHub\\\\TA-Assignment-Software\\\\FrontEnd\\\\src\\\\components\\\\Chart.js\";\nimport React, { Component } from \"react\";\nimport { Bar, Line, Pie } from \"react-chartjs-2\";\nexport var Chart = /*#__PURE__*/function (_Component) {\n  _inherits(Chart, _Component);\n\n  var _super = _createSuper(Chart);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      chartData: props.chartData\n    };\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, \"CHART\", /*#__PURE__*/React.createElement(Pie, {\n        data: {\n          labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n          datasets: [{\n            label: \"# of votes\",\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n            borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n            borderWidth: 1\n          } // {\n          //   label: 'Quantity',\n          //   data: [47, 52, 67, 58, 9, 50],\n          //   backgroundColor: 'orange',\n          //   borderColor: 'red',\n          // },\n          ]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          legend: {\n            labels: {\n              fontSize: 25\n            }\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Chart;\n}(Component);\nChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  legendPosition: \"right\",\n  location: \"City\"\n};\nexport default Chart;","map":{"version":3,"sources":["C:/Users/junio/Documents/GitHub/TA-Assignment-Software/FrontEnd/src/components/Chart.js"],"names":["React","Component","Bar","Line","Pie","Chart","props","state","chartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","fontSize","defaultProps","displayTitle","displayLegend","legendPosition","location"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,QAA+B,iBAA/B;AAEA,WAAaC,KAAb;AAAA;;AAAA;;AACE,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAEF,KAAK,CAACE;AADN,KAAb;AAFiB;AAKlB;;AANH;AAAA;AAAA,WAeE,kBAAS;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAgBE,oBAAC,GAAD;AACE,QAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,QAA7C,CADJ;AAEJC,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,KAAK,EAAE,YADT;AAEEC,YAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFR;AAGEC,YAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;AAWEC,YAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,EAKX,wBALW,EAMX,uBANW,CAXf;AAmBEC,YAAAA,WAAW,EAAE;AAnBf,WADQ,CAsBR;AACA;AACA;AACA;AACA;AACA;AA3BQ;AAFN,SADR;AAiCE,QAAA,MAAM,EAAE,GAjCV;AAkCE,QAAA,KAAK,EAAE,GAlCT;AAmCE,QAAA,OAAO,EAAE;AACPC,UAAAA,mBAAmB,EAAE,KADd;AAEPC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,CACL;AACEC,cAAAA,KAAK,EAAE;AACLC,gBAAAA,WAAW,EAAE;AADR;AADT,aADK;AADD,WAFD;AAWPC,UAAAA,MAAM,EAAE;AACNZ,YAAAA,MAAM,EAAE;AACNa,cAAAA,QAAQ,EAAE;AADJ;AADF;AAXD,SAnCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,CADF;AAoGD;AApHH;;AAAA;AAAA,EAA2BrB,SAA3B;AAAaI,K,CAQJkB,Y,GAAe;AACpBC,EAAAA,YAAY,EAAE,IADM;AAEpBC,EAAAA,aAAa,EAAE,IAFK;AAGpBC,EAAAA,cAAc,EAAE,OAHI;AAIpBC,EAAAA,QAAQ,EAAE;AAJU,C;AA+GxB,eAAetB,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Bar, Line, Pie } from \"react-chartjs-2\";\r\n\r\nexport class Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: props.chartData,\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle: true,\r\n    displayLegend: true,\r\n    legendPosition: \"right\",\r\n    location: \"City\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chart\">\r\n        CHART\r\n        {/* <Bar\r\n          data={this.state.chartData}\r\n          options={{\r\n            title: {\r\n              display: this.props.displayTitle,\r\n              text: \"Largest Cities In \" + this.props.location,\r\n              fontSize: 25,\r\n            },\r\n            legend: {\r\n              display: this.props.displayLegend,\r\n              position: this.props.legendPosition,\r\n            },\r\n          }}\r\n        /> */}\r\n        <Pie\r\n          data={{\r\n            labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n            datasets: [\r\n              {\r\n                label: \"# of votes\",\r\n                data: [12, 19, 3, 5, 2, 3],\r\n                backgroundColor: [\r\n                  \"rgba(255, 99, 132, 0.2)\",\r\n                  \"rgba(54, 162, 235, 0.2)\",\r\n                  \"rgba(255, 206, 86, 0.2)\",\r\n                  \"rgba(75, 192, 192, 0.2)\",\r\n                  \"rgba(153, 102, 255, 0.2)\",\r\n                  \"rgba(255, 159, 64, 0.2)\",\r\n                ],\r\n                borderColor: [\r\n                  \"rgba(255, 99, 132, 1)\",\r\n                  \"rgba(54, 162, 235, 1)\",\r\n                  \"rgba(255, 206, 86, 1)\",\r\n                  \"rgba(75, 192, 192, 1)\",\r\n                  \"rgba(153, 102, 255, 1)\",\r\n                  \"rgba(255, 159, 64, 1)\",\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n              // {\r\n              //   label: 'Quantity',\r\n              //   data: [47, 52, 67, 58, 9, 50],\r\n              //   backgroundColor: 'orange',\r\n              //   borderColor: 'red',\r\n              // },\r\n            ],\r\n          }}\r\n          height={400}\r\n          width={600}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            legend: {\r\n              labels: {\r\n                fontSize: 25,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        {/* <Line\r\n          data={this.state.chartData}\r\n          options={{\r\n            title: {\r\n              display: this.props.displayTitle,\r\n              text: \"Largest Cities In \" + this.props.location,\r\n              fontSize: 25,\r\n            },\r\n            legend: {\r\n              display: this.props.displayLegend,\r\n              position: this.props.legendPosition,\r\n            },\r\n          }}\r\n        />\r\n        <Pie\r\n          data={this.state.chartData}\r\n          options={{\r\n            title: {\r\n              display: this.props.displayTitle,\r\n              text: \"Largest Cities In \" + this.props.location,\r\n              fontSize: 25,\r\n            },\r\n            legend: {\r\n              display: this.props.displayLegend,\r\n              position: this.props.legendPosition,\r\n            },\r\n          }}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}